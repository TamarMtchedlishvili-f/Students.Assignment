@page "/Student2"
@using Blazor.Learner.Shared.Models.DoSo.Students.Shared.Model
@inject HttpClient client
@inject IJSRuntime js

<h3>Students</h3>
<small>Add as many Students as you wish.</small>
<div class="form-group">
    <a class="btn btn-success" href="Student/create"><i class="oi oi-plus"></i> Create New</a>
</div>
<br>

@if (Students == null)
{
    <text>Loading...</text>
}
else if (Students.Length == 0)
{
    <text>No Records Found.</text>
}
else
{
    <table class="table table-striped">
        <thead>
            <tr>
                <th>Id</th>
                <th>ID Number</th>
                <th>First Name</th>
                <th>Last Name</th>
                <th>Date of birth</th>
                <th>Gender</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (Student student in Students)
            {
                <tr>
                    <td>@student.Id</td>
                    <td>@student.IDNumber</td>
                    <td>@student.FirstName</td>
                    <td>@student.LastName</td>
                    <td>@student.DateOfBirth</td>
                    <td>@student.Gender</td>
                    <td>
                        <a class="btn btn-success" href="Student/edit/@student.Id">Edit</a>
                        <button class="btn btn-danger" @onclick="@(() => Delete(student.Id))">Delete</button>
                    </td>
                </tr>
            }

        </tbody>
    </table>
}
@code {
    Student[] Students { get; set; }
    protected override async Task OnInitializedAsync()
    {
        Students = await client.GetFromJsonAsync<Student[]>("api/Student");
    }

    async Task Delete(int StudentId)
    {
        var student = Students.First(x => x.Id == StudentId);
        if (await js.InvokeAsync<bool>("confirm", $"Do you want to delete {student.FirstName}'s ({student.Id}) Record?"))
        {
            await client.DeleteAsync($"api/Student/{StudentId}");
            await OnInitializedAsync();
        }
    }
}

