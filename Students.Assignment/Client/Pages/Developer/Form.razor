@using Blazor.Learner.Shared.Models.DoSo.Students.Shared.Model
@using static Blazor.Learner.Shared.Models.DoSo.Students.Shared.Model.Student
<EditForm Model="@student" OnValidSubmit="@OnValidSubmit">
    <DataAnnotationsValidator />
    <div class="form-group">
        <label>First Name :</label>
        <div>
            <InputText @bind-Value="@student.FirstName" />
            <ValidationMessage For="@(() => student.FirstName)" />
        </div>
    </div>
    <div class="form-group ">
        <div>
            <label>Last Name :</label>
            <div>
                <InputText @bind-Value="@student.LastName" />
                <ValidationMessage For="@(() => student.LastName)" />
            </div>
        </div>
    </div>
    <div class="form-group ">
        <div>
            <label>Email :</label>
            <div>
                <InputDate @bind-Value="@student.DateOfBirth" />
                <ValidationMessage For="@(() => student.DateOfBirth)" />
            </div>
        </div>
    </div>
    <div class="form-group ">
        <div>
            <label>Experience :</label>
            <div>
                <InputSelect @bind-Value="@student.Gender">
                @foreach (var gender in Enum.GetValues(typeof(GenderEnum)))
                {
                    <option value="@gender">@gender</option>
                }
                </InputSelect>
                <ValidationMessage For="@(() => student.Gender)" />
            </div>
        </div>
    </div>

    <button type="submit" class="btn btn-success">
        @ButtonText
    </button>

</EditForm>


@code {
    [Parameter] public Student student { get; set; }
    [Parameter] public string ButtonText { get; set; } = "Save";
    [Parameter] public EventCallback OnValidSubmit { get; set; }
}
